name: Build macOS App (Bundle)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Generate .icns icon
      run: |
        if [ -f "gestor-calificaciones.png" ]; then
          echo "Generating .icns icon from gestor-calificaciones.png"
          ICONSET_DIR="GestorCalificacionesAules.iconset"
          mkdir -p "$ICONSET_DIR"
          
          for size in 16 32 64 128 256 512; do
            sips -z "$size" "$size" "gestor-calificaciones.png" --out "$ICONSET_DIR/icon_${size}x${size}.png"
            sips -z $((size*2)) $((size*2)) "gestor-calificaciones.png" --out "$ICONSET_DIR/icon_${size}x${size}@2x.png"
          done
          
          iconutil -c icns "$ICONSET_DIR" -o "GestorCalificacionesAules.icns"
          echo "✓ Icon generated: GestorCalificacionesAules.icns"
        else
          echo "⚠ No icon file found, continuing without custom icon"
        fi
    
    - name: Build with PyInstaller (Bundle)
      run: |
        echo "Building macOS app bundle with PyInstaller..."
        
        PYI_ARGS=(
          --name "GestorCalificacionesAules"
          --onedir
          --console
          --osx-bundle-identifier "com.aules.GestorCalificacionesAules"
          --add-data "gestor-calificaciones.png:." 
        )
        
        if [ -f "gestor-calificaciones.ico" ]; then
          PYI_ARGS+=(--add-data "gestor-calificaciones.ico:.")
        fi
        
        if [ -f "GestorCalificacionesAules.icns" ]; then
          echo "Using custom icon: GestorCalificacionesAules.icns"
          PYI_ARGS+=(--icon "GestorCalificacionesAules.icns")
        else
          echo "No custom icon found, using default"
        fi
        
        echo "PyInstaller arguments: ${PYI_ARGS[*]}"
        pyinstaller "${PYI_ARGS[@]}" "calificaciones_aules.py"
        
        echo "Checking build results..."
        ls -la dist/
        
        if [ -d "dist/GestorCalificacionesAules" ]; then
          echo "✓ App directory created successfully"
          ls -la "dist/GestorCalificacionesAules/"
        else
          echo "✗ App directory not found"
          exit 1
        fi
    
    - name: Create .app bundle
      run: |
        echo "Creating .app bundle structure..."
        
        # Create .app bundle
        mkdir -p "dist/GestorCalificacionesAules.app/Contents/MacOS"
        mkdir -p "dist/GestorCalificacionesAules.app/Contents/Resources"
        
        # Copy executable and dependencies
        cp -r "dist/GestorCalificacionesAules"/* "dist/GestorCalificacionesAules.app/Contents/MacOS/"
        
        # Create Info.plist
        echo '<?xml version="1.0" encoding="UTF-8"?>' > "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '<plist version="1.0">' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '<dict>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleExecutable</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>GestorCalificacionesAules</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleIdentifier</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>com.aules.GestorCalificacionesAules</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleName</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>GestorCalificacionesAules</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleVersion</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>0.6</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleShortVersionString</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>0.6</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundlePackageType</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>APPL</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>CFBundleSignature</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>????</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <key>LSMinimumSystemVersion</key>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '    <string>10.9</string>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '</dict>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        echo '</plist>' >> "dist/GestorCalificacionesAules.app/Contents/Info.plist"
        
        # Copy icon if available
        if [ -f "GestorCalificacionesAules.icns" ]; then
          cp "GestorCalificacionesAules.icns" "dist/GestorCalificacionesAules.app/Contents/Resources/"
        fi
        
        echo "✓ .app bundle created successfully"
        ls -la "dist/GestorCalificacionesAules.app/Contents/"
    
    - name: Create DMG
      run: |
        echo "Creating DMG..."
        
        hdiutil create -volname "GestorCalificacionesAules" \
          -srcfolder "dist/GestorCalificacionesAules.app" \
          -ov -format UDZO "dist/GestorCalificacionesAules.dmg"
        
        echo "✓ DMG created successfully"
        ls -la dist/*.dmg
    
    - name: Test app bundle
      run: |
        echo "Testing app bundle..."
        if [ -f "dist/GestorCalificacionesAules.app/Contents/MacOS/GestorCalificacionesAules" ]; then
          echo "✓ Executable found in app bundle"
          # Test that the executable runs (should show help/version)
          "dist/GestorCalificacionesAules.app/Contents/MacOS/GestorCalificacionesAules" --help 2>/dev/null || \
          "dist/GestorCalificacionesAules.app/Contents/MacOS/GestorCalificacionesAules" /? 2>/dev/null || \
          echo "App bundle created successfully (executable may need data file to run properly)"
        else
          echo "✗ Executable not found in app bundle"
          exit 1
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-app-bundle
        path: |
          dist/GestorCalificacionesAules.app
          dist/GestorCalificacionesAules.dmg
