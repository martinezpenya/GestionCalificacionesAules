name: Build Linux AppImage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libfuse2 \
          file \
          desktop-file-utils \
          appstream
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Download AppImageTool
      run: |
        echo "Downloading AppImageTool..."
        wget -O appimagetool-x86_64.AppImage https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        echo "✓ AppImageTool downloaded"
    
    - name: Build with PyInstaller
      run: |
        echo "Building executable with PyInstaller..."
        
        PYI_ARGS=(
          --name "GestorCalificacionesAules"
          --onedir
          --console
          --add-data "gestor-calificaciones.png:."
        )
        
        if [ -f "gestor-calificaciones.ico" ]; then
          PYI_ARGS+=(--add-data "gestor-calificaciones.ico:.")
        fi
        
        echo "PyInstaller arguments: ${PYI_ARGS[*]}"
        pyinstaller "${PYI_ARGS[@]}" \
          --hidden-import=bs4 \
          --hidden-import=tqdm \
          --hidden-import=requests \
          --hidden-import=urllib.parse \
          --hidden-import=json \
          --hidden-import=re \
          --hidden-import=time \
          --hidden-import=os \
          --hidden-import=sys \
          --hidden-import=argparse \
          --hidden-import=pydoc \
          calificaciones_aules.py
        
        echo "Checking build results..."
        ls -la dist/
        
        if [ -d "dist/GestorCalificacionesAules" ]; then
          echo "✓ Executable directory created successfully"
          ls -la "dist/GestorCalificacionesAules/"
        else
          echo "✗ Executable directory not found"
          exit 1
        fi
    
    - name: Create AppDir structure
      run: |
        echo "Creating AppDir structure..."
        
        # Create AppDir
        mkdir -p "GestorCalificacionesAules.AppDir"
        mkdir -p "GestorCalificacionesAules.AppDir/usr/bin"
        mkdir -p "GestorCalificacionesAules.AppDir/usr/share/applications"
        mkdir -p "GestorCalificacionesAules.AppDir/usr/share/icons/hicolor/256x256/apps"
        
        # Copy executable and dependencies
        cp -r "dist/GestorCalificacionesAules"/* "GestorCalificacionesAules.AppDir/usr/bin/"
        
        # Create desktop file
        cat > "GestorCalificacionesAules.AppDir/usr/share/applications/GestorCalificacionesAules.desktop" << EOF
        [Desktop Entry]
        Type=Application
        Name=Gestor Calificaciones Aules
        Comment=Gestor de calificaciones para Aules
        Exec=GestorCalificacionesAules
        Icon=GestorCalificacionesAules
        Categories=Education;Office;
        Terminal=true
        StartupNotify=true
        EOF
        
        # Copy icon
        if [ -f "gestor-calificaciones.png" ]; then
          cp "gestor-calificaciones.png" "GestorCalificacionesAules.AppDir/usr/share/icons/hicolor/256x256/apps/GestorCalificacionesAules.png"
          cp "gestor-calificaciones.png" "GestorCalificacionesAules.AppDir/GestorCalificacionesAules.png"
        else
          echo "⚠ No icon file found, creating placeholder"
          # Create a simple placeholder icon
          convert -size 256x256 xc:lightblue -pointsize 24 -fill black -gravity center -annotate +0+0 "GCA" "GestorCalificacionesAules.AppDir/GestorCalificacionesAules.png"
          cp "GestorCalificacionesAules.AppDir/GestorCalificacionesAules.png" "GestorCalificacionesAules.AppDir/usr/share/icons/hicolor/256x256/apps/GestorCalificacionesAules.png"
        fi
        
        # Create AppRun script
        cat > "GestorCalificacionesAules.AppDir/AppRun" << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export PATH="${HERE}/usr/bin:${PATH}"
        exec "${HERE}/usr/bin/GestorCalificacionesAules" "$@"
        EOF
        
        chmod +x "GestorCalificacionesAules.AppDir/AppRun"
        
        # Copy desktop file to root
        cp "GestorCalificacionesAules.AppDir/usr/share/applications/GestorCalificacionesAules.desktop" "GestorCalificacionesAules.AppDir/"
        
        echo "✓ AppDir structure created"
        ls -la "GestorCalificacionesAules.AppDir/"
    
    - name: Create AppImage
      run: |
        echo "Creating AppImage..."
        
        # Make AppImageTool executable and create AppImage
        export ARCH=x86_64
        ./appimagetool-x86_64.AppImage "GestorCalificacionesAules.AppDir" "GestorCalificacionesAules-x86_64.AppImage"
        
        if [ -f "GestorCalificacionesAules-x86_64.AppImage" ]; then
          echo "✓ AppImage created successfully"
          ls -la "GestorCalificacionesAules-x86_64.AppImage"
          
          # Make it executable
          chmod +x "GestorCalificacionesAules-x86_64.AppImage"
          
          # Show file info
          file "GestorCalificacionesAules-x86_64.AppImage"
        else
          echo "✗ AppImage creation failed"
          exit 1
        fi
    
    - name: Test AppImage
      run: |
        echo "Testing AppImage..."
        if [ -f "GestorCalificacionesAules-x86_64.AppImage" ]; then
          echo "✓ AppImage file exists"
          
          # Test that the AppImage runs (should show help/version)
          ./GestorCalificacionesAules-x86_64.AppImage --help 2>/dev/null || \
          ./GestorCalificacionesAules-x86_64.AppImage /? 2>/dev/null || \
          echo "AppImage created successfully (executable may need data file to run properly)"
        else
          echo "✗ AppImage file not found"
          exit 1
        fi
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-appimage
        path: |
          GestorCalificacionesAules-x86_64.AppImage
          GestorCalificacionesAules.AppDir/
